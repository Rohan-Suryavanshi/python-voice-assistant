import speech_recognition as sr
import pyttsx3
import webbrowser
import datetime
import time

recognizer = sr.Recognizer()
engine = pyttsx3.init()
todo_list = []

def speak(text):
    engine.say(text)
    engine.runAndWait()

def take_command():
    try:
        with sr.Microphone() as source:
            print("Adjusting for ambient noise... Please wait.")
            recognizer.adjust_for_ambient_noise(source)
            print("Listening...")
            audio = recognizer.listen(source, timeout=5)
            command = recognizer.recognize_google(audio, language="en-IN").lower()
            print(f"User said: {command}")
            return command
    except sr.UnknownValueError:
        speak("Sorry, I didn't understand that. Please try again.")
        return None
    except sr.RequestError:
        speak("Sorry, my speech service is down.")
        return None
    except sr.WaitTimeoutError:
        print("Listening timed out while waiting for a phrase to start.")
        return None

def add_todo():
    speak("What task would you like to add?")
    task = take_command()
    if task:
        todo_list.append(task)
        speak(f"Task '{task}' added to your to-do list.")
    else:
        speak("I couldn't add that task. Please try again.")

def set_reminder():
    speak("What would you like to be reminded about?")
    reminder = take_command()
    if reminder:
        speak("In how many seconds should I remind you?")
        seconds = take_command()
        try:
            seconds = int(seconds)
            speak(f"Reminder set for {seconds} seconds from now.")
            time.sleep(seconds)
            speak(f"Reminder: {reminder}")
        except (ValueError, TypeError):
            speak("Sorry, I couldn't understand the time duration. Please try again.")
    else:
        speak("I couldn't understand the reminder. Please try again.")

def search_web():
    speak("What would you like to search for?")
    query = take_command()
    if query:
        webbrowser.open(f"https://www.google.com/search?q={query}")
        speak(f"Here are the results for {query} on Google.")
    else:
        speak("I couldn't understand the search query. Please try again.")

def voice_assistant():
    speak("Hello, how can I assist you today?")
    while True:
        command = take_command()
        
        if command:
            if "add a to-do" in command or "to-do list" in command:
                add_todo()
            elif "set a reminder" in command or "set reminders" in command:
                set_reminder()
            elif "search the web" in command:
                search_web()
            elif "exit" in command or "stop" in command:
                speak("Goodbye!")
                break
            else:
                speak("I can help you add to-dos, set reminders, or search the web. Just say the command.")
        else:
            speak("I am listening for your command.")

voice_assistant()
